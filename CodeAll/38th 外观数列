给定一个正整数 n ，输出外观数列的第 n 项。

「外观数列」是一个整数序列，从数字 1 开始，序列中的每一项都是对前一项的描述。

你可以将其视作是由递归公式定义的数字字符串序列：

countAndSay(1) = "1"
countAndSay(n) 是对 countAndSay(n-1) 的描述，然后转换成另一个数字字符串。
前五项如下：

1.     1
2.     11
3.     21
4.     1211
5.     111221
第一项是数字 1 
描述前一项，这个数是 1 即 “ 一 个 1 ”，记作 "11"
描述前一项，这个数是 11 即 “ 二 个 1 ” ，记作 "21"
描述前一项，这个数是 21 即 “ 一 个 2 + 一 个 1 ” ，记作 "1211"
描述前一项，这个数是 1211 即 “ 一 个 1 + 一 个 2 + 二 个 1 ” ，记作 "111221"

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/count-and-say
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
######################
class Solution {
    public String countAndSay(int n) {
        if(n==1) return "1";
        return count(n-1,"1");
    }
    public String count(int n, String s){
        StringBuffer sb = new StringBuffer();
        for(int i=0;i<s.length();){
            int j = i;
            while(i<s.length()&&s.charAt(i)==s.charAt(j)) i++;
            sb.append(Integer.toString(i-j));
            sb.append(s.charAt(j));
        }
        if(n-1>0) return count(n-1,sb.toString());
        return sb.toString();
    } 
}
########################

题目给了提示，而且这题也是一种递归的思想，所以使用递归，不过用循环肯定也可以。将字符串“1”加入递归，
每次都计算出字符串连续的重复的字符的个数，然后用一个StringBuffer添加个数和字符。然后递归，直到n-1 = 0。
########################
官方使用的是循环
class Solution {
    public String countAndSay(int n) {
        String str = "1";
        for (int i = 2; i <= n; ++i) {
            StringBuilder sb = new StringBuilder();
            int start = 0;
            int pos = 0;

            while (pos < str.length()) {
                while (pos < str.length() && str.charAt(pos) == str.charAt(start)) {
                    pos++;
                }
                sb.append(Integer.toString(pos - start)).append(str.charAt(start));
                start = pos;
            }
            str = sb.toString();
        }
        return str;
    }
}
#####################

