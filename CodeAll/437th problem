/**
 * Definition for a binary tree node.
 *给定一个二叉树的根节点 root ，和一个整数 targetSum ，求该二叉树里节点值之和等于 targetSum 的 路径 的数目。

*路径 不需要从根节点开始，也不需要在叶子节点结束，但是路径方向必须是向下的（只能从父节点到子节点）。

*来源：力扣（LeetCode）
*链接：https://leetcode-cn.com/problems/path-sum-iii
*著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int pathSum(TreeNode root, int targetSum) {
        int gettar=0;
        if(root==null){
            return 0;
        }
        if(targetSum==root.val){
            gettar = 1;
        }
        return gettar+pathSum2(root.left,targetSum-root.val)+pathSum(root.left,targetSum)+pathSum2(root.right,targetSum-root.val)+pathSum(root.right,targetSum); 
    }
    public int pathSum2(TreeNode root, int targetSum) {
        int gettar=0;
        if(root==null){
            return 0;
        }
        if(targetSum==root.val){
            gettar = 1;
        }
        return gettar+pathSum2(root.left,targetSum-root.val)+pathSum2(root.right,targetSum-root.val); 
    }
}
